[{"/Users/mlatin/Desktop/tiem/Expert/pages/_app.tsx":"1","/Users/mlatin/Desktop/tiem/Expert/pages/_document.tsx":"2","/Users/mlatin/Desktop/tiem/Expert/pages/about.tsx":"3","/Users/mlatin/Desktop/tiem/Expert/pages/index.tsx":"4","/Users/mlatin/Desktop/tiem/Expert/components/ImageItem/index.tsx":"5","/Users/mlatin/Desktop/tiem/Expert/components/ImageLine/index.tsx":"6","/Users/mlatin/Desktop/tiem/Expert/components/index.ts":"7"},{"size":1370,"mtime":1637559772960,"results":"8","hashOfConfig":"9"},{"size":2628,"mtime":1637559763122,"results":"10","hashOfConfig":"9"},{"size":539,"mtime":1637559754510,"results":"11","hashOfConfig":"9"},{"size":454,"mtime":1637569927357,"results":"12","hashOfConfig":"9"},{"size":182,"mtime":1637204118164,"results":"13","hashOfConfig":"9"},{"size":3153,"mtime":1637228784701,"results":"14","hashOfConfig":"9"},{"size":108,"mtime":1637569400884,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"ko4dej",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mlatin/Desktop/tiem/Expert/pages/_app.tsx",["33"],"import React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { AppProps } from \"next/app\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { CacheProvider, EmotionCache } from \"@emotion/react\";\nimport theme from \"@/src/theme\";\nimport createEmotionCache from \"@/src/createEmotionCache\";\n\n// Client-side cache, shared for the whole session of the user in the browser.\nconst clientSideEmotionCache = createEmotionCache();\n\ninterface MyAppProps extends AppProps {\n  emotionCache?: EmotionCache;\n}\nconst MyApp = (props: MyAppProps) => {\n  const { Component, emotionCache = clientSideEmotionCache, pageProps } = props;\n  useEffect(() => {\n    console.log(props, \"props\");\n  }, [props]);\n  return (\n    <CacheProvider value={emotionCache}>\n      <Head>\n        <title>My Expert</title>\n        <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        />\n      </Head>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </CacheProvider>\n  );\n};\n\nexport default MyApp;\n","/Users/mlatin/Desktop/tiem/Expert/pages/_document.tsx",["34","35"],"import React from \"react\";\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport theme from \"@/src/theme\";\nimport createEmotionCache from \"@/src/createEmotionCache\";\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\n// `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with static-site generation (SSG).\nMyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  const originalRenderPage = ctx.renderPage;\n\n  // You can consider sharing the same emotion cache between all the SSR requests to speed up performance.\n  // However, be aware that it can have global side effects.\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: (App: any) => (props) => (\n        <App emotionCache={cache} {...props} />\n      ),\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  // This is important. It prevents emotion to render invalid HTML.\n  // See https://github.com/mui-org/material-ui/issues/26561#issuecomment-855286153\n  const emotionStyles = extractCriticalToChunks(initialProps.html);\n  const emotionStyleTags = emotionStyles.styles.map((style) => (\n    <style\n      data-emotion={`${style.key} ${style.ids.join(\" \")}`}\n      key={style.key}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{ __html: style.css }}\n    />\n  ));\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [\n      ...React.Children.toArray(initialProps.styles),\n      ...emotionStyleTags,\n    ],\n  };\n};\n","/Users/mlatin/Desktop/tiem/Expert/pages/about.tsx",[],"/Users/mlatin/Desktop/tiem/Expert/pages/index.tsx",[],"/Users/mlatin/Desktop/tiem/Expert/components/ImageItem/index.tsx",[],"/Users/mlatin/Desktop/tiem/Expert/components/ImageLine/index.tsx",["36"],"import React, { useEffect } from \"react\";\nimport {\n  Box,\n  ImageList,\n  ImageListItem,\n  ImageListItemBar,\n  ListSubheader,\n  IconButton,\n} from \"@mui/material\";\n// import Image from \"next/image\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nconst ImageLine = () => {\n  useEffect(() => {\n    console.log(itemData, \"itemData\");\n  }, []);\n  return (\n    <Box sx={{ border: \"1px solid grey\", p: 2 }}>\n      <ImageList sx={{ width: 500, height: 450 }}>\n        <ImageListItem key=\"Subheader\" cols={2}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </ImageListItem>\n        {itemData.map((item) => (\n          <ImageListItem key={item.img}>\n            <img\n              src={`${item.img}?w=248&fit=crop&auto=format`}\n              srcSet={`${item.img}?w=248&fit=crop&auto=format&dpr=2 2x`}\n              alt={item.title}\n              loading=\"lazy\"\n            />\n            <ImageListItemBar\n              title={item.title}\n              subtitle={item.author}\n              actionIcon={\n                <IconButton\n                  sx={{ color: \"rgba(255, 255, 255, 0.54)\" }}\n                  aria-label={`info about ${item.title}`}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </Box>\n  );\n};\n\nexport default ImageLine;\n\nconst itemData = [\n  {\n    img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\n    title: \"Breakfast\",\n    author: \"@bkristastucchio\",\n    rows: 2,\n    cols: 2,\n    featured: true,\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\n    title: \"Burger\",\n    author: \"@rollelflex_graphy726\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\n    title: \"Camera\",\n    author: \"@helloimnik\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\n    title: \"Coffee\",\n    author: \"@nolanissac\",\n    cols: 2,\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\n    title: \"Hats\",\n    author: \"@hjrc33\",\n    cols: 2,\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\n    title: \"Honey\",\n    author: \"@arwinneil\",\n    rows: 2,\n    cols: 2,\n    featured: true,\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\n    title: \"Basketball\",\n    author: \"@tjdragotta\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\n    title: \"Fern\",\n    author: \"@katie_wasserman\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\n    title: \"Mushrooms\",\n    author: \"@silverdalex\",\n    rows: 2,\n    cols: 2,\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\n    title: \"Tomato basil\",\n    author: \"@shelleypauls\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\n    title: \"Sea star\",\n    author: \"@peterlaster\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\n    title: \"Bike\",\n    author: \"@southside_customs\",\n    cols: 2,\n  },\n];\n","/Users/mlatin/Desktop/tiem/Expert/components/index.ts",[],{"ruleId":"37","severity":1,"message":"38","line":19,"column":5,"nodeType":"39","messageId":"40","endLine":19,"endColumn":16},{"ruleId":"41","severity":1,"message":"42","line":62,"column":25,"nodeType":"43","messageId":"44","endLine":62,"endColumn":28,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":62,"column":33,"nodeType":"48","messageId":"49","endLine":64,"endColumn":8},{"ruleId":"37","severity":1,"message":"38","line":15,"column":5,"nodeType":"39","messageId":"40","endLine":15,"endColumn":16},"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["50","51"],"react/display-name","Component definition is missing display name","ArrowFunctionExpression","noDisplayName",{"messageId":"52","fix":"53","desc":"54"},{"messageId":"55","fix":"56","desc":"57"},"suggestUnknown",{"range":"58","text":"59"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"58","text":"60"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1768,1771],"unknown","never"]